import roslib
import rospy
#import time
from sensor_msgs.msg import JointState
import simple_script_server
sss = simple_script_server.simple_script_server()



# global var
current_joint_states = [0,0,0,0,0,0]

# receives the joint states
def jointStateCallback(msg):
	for i in range(0,len(msg.position)):
		current_joint_states[i] = msg.position[i]


if __name__ == "__main__":
	rospy.init_node('control_2')
	rospy.Subscriber("/arm/joint_states", JointState, jointStateCallback)
	print "init: start"
	sss.init("base")
	print "Base initialized"
	sss.init("torso")
	print "Torso initialized"

	trajectory = [[0.290486, -1.59249, -1.66967, -1.59205, -1.70336, -0.964658],
	[0.104803, -1.2313, -1.97507, -1.52801, -1.70267, -1.24475],
	[0.0669326, -0.821055, -2.24594, -1.48192, -1.45296, -0.856033],
	[0.233963, -1.50205, -2.06433, -1.27911, -1.90443, -0.856944],
	[-0.244221, -1.59419, -1.93948, -1.28011, -1.67018, -0.85692],
	[-0.869446, -1.53095, -1.91072, -1.32768, -1.88009, -0.886976],
	[-0.951875, -1.89197, -2.0929, -0.970447, -2.23167, -0.655609], # <-- 6 invalid, too much rotated
	[-0.0767832, -2.48617, -1.27004, -1.04663, -1.84198, -0.655777],
	[-0.482841, -1.85463, -2.21126, -0.954778, -1.93444, -0.655825],
	[-0.388208, -2.31912, -1.55404, -0.99531, -1.93626, -0.42266],
	[-0.804166, -1.81118, -2.12329, -1.02561, -2.12411, -0.191867], # <-- 10 invalid, too much rotated
	[-1.2302, -1.69386, -2.36552, -1.04129, -2.26896, -0.701173], # <-- 11 invalid, too much rotated
	[-1.38234, -1.56798, -2.0453, -0.93167, -2.22118, -0.270124], # <-- 12 invalid, too much rotated
	[-0.727746, -1.72011, -1.86673, -0.931838, -1.95156, -0.593435], 
	[-0.196799, -2.14295, -1.32018, -0.85359, -1.85027, -0.98774],
	[-0.182155, -2.16683, -0.602926, -1.03615, -2.06093, 0.269837],
	[-0.667842, -1.92837, -0.734178, -1.14695, -2.06089, -0.763155], # <-- 16 invalid, not detected
	[-1.41761, -1.70564, -1.14617, -1.125, -1.8824, -0.454634], # <-- 17 invalid, not detected
	[-0.536152, -1.8429, -0.960991, -1.48456, -2.26281, -0.516256],
	[-0.987287, -1.22006, -1.52411, -1.86945, -1.79603, -0.516209],
	[-1.69489, -1.21939, -1.69615, -1.56911, -2.16975, -0.516232], # <-- 20 invalid, not detected/too much rotated
	[-1.69219, -1.21963, -2.16423, -1.28916, -2.29557, -0.177175], # <-- 21 invalid, too much rotated
	[-1.21983, -1.21912, -2.08734, -1.71818, -1.95133, -0.177079], # <-- 22 invalid, not detected
	[-0.437349, -1.44422, -1.91748, -1.72438, -1.77876, -0.176384], # <-- 23 invalid, not detected
	[-0.525061, -1.80646, -2.30267, -0.99461, -1.70578, -0.176528],
	[-1.19043, -1.76782, -2.2881, -0.699858, -2.4037, -0.593123], # <-- 25 invalid, too much rotated
	[-1.14162, -1.96895, -2.04137, -0.624451, -2.29218, -0.0681902], # <-- 26 invalid, not detected/too much rotated?
	[-1.11001, -1.96682, -1.39837, -0.553144, -2.29388, -0.0694606], # <-- 27 invalid, not detected
	[-0.883781, -1.73085, -1.11415, -0.545535, -2.29387, -0.0702995], # <-- 28 invalid, not detected
	[-1.74846, -1.59057, -1.2187, -0.665838, -2.09171, -0.0702755], # <-- 29 invalid, not detected
	[-2.33772, -1.91769, -0.809247, -1.00981, -1.62493, -0.270508], # <-- 30 invalid, not detected
	[-1.2474, -1.79266, -1.07712, -0.985622, -1.95235, -0.2701], # <-- 31 invalid, not detected
	[-1.5509, -1.70266, -1.69704, -0.978188, -2.45132, -0.270029], # <-- 32 invalid, not detected/too much rotated?
	[-2.21363, -1.6424, -1.11286, -1.00894, -1.88965, -0.2701], # invalid 33, not detected
	[-2.61877, -1.90534, -0.818499, -0.81245, -1.12895, 0.0532819],
	[-1.62944, -1.83196, -1.02523, -0.86811, -1.62525, -0.192658], # invalid 35, not detected
	[-2.54672, -1.83154, -0.736598, -0.541855, -1.62436, -0.100667], # invalid 36, not detected
	[-3.20757, -2.16732, -0.562348, -1.14929, -1.62437, -0.100667],
	[-3.02511, -2.26348, -0.860036, -1.01445, -1.32964, -0.100116],
	[-2.89437, -2.1304, -1.79332, -0.782371, -0.971964, 0.0530422],
	[-2.67085, -1.91318, -2.16447, -0.605329, -0.785787, 0.0525868],
	[-3.33119, -2.24411, -1.69675, -0.807904, -1.21957, 0.269022],
	[-3.40541, -2.26682, -0.970147, -0.912207, -1.21977, 0.268974],
	[-3.45523, -2.26688, -0.416212, -1.21106, -1.21998, 0.268974],
	[-2.90543, -1.94214, -0.798006, -0.830731, -1.22184, -0.177175],
	[-2.17114, -1.84455, -0.960488, -0.837864, -1.65096, -0.177055],
	[-2.67929, -2.09738, -1.79507, -0.372331, -0.722398, -0.212384], # invalid 46, not detected/too much rotated?
	[-3.15149, -2.25976, -1.53283, -0.683048, -1.01325, -0.212552],
	[-3.18584, -2.6264, -1.55201, -0.387479, -1.12592, 0.0530901],
	[-3.20071, -2.93421, -1.52274, -0.24794, -1.06657, 0.00572846],
	[-2.63964, -2.71244, -2.33561, 0.0575652, -0.730362, -0.146711],
	[-2.8043, -2.7137, -2.20591, 0.0623097, -0.730672, -0.146687],
	[-2.72131, -2.07395, -1.87594, -0.571451, -0.776433, -0.145297],
	[-1.28267, -2.44552, -1.10787, -0.667254, -2.38781, 0.747145], # invalid 53, not detected/too much rotated?
	[-1.26015, -2.14726, -2.07576, -0.417555, -2.52007, 0.715362], # invalid 54, too much rotated
	[-1.16209, -2.85739, -1.80128, -0.0253353, -2.50495, 0.714811], # invalid 55, too much rotated
	[-0.802985, -2.97856, -1.46081, -0.30896, -2.34853, 0.301475], # invalid, too much rotated
	[-0.802715, -2.5777, -1.56996, -0.433844, -2.24011, 0.348525], # invalid, too much rotated
	[-0.82061, -2.1899, -1.59903, -0.817661, -2.04856, 0.348477]] # invalid, not detected

	for i in range(0,len(trajectory)):
		traj = []
		e = str(raw_input(("Press Enter to continue: "+str(i)+" ")))

		if e == "exit":
			break

		traj.insert(0, current_joint_states)
		traj.insert(1, trajectory[i])
		print "[%s]" % ", ".join(map(str, traj))
		sss.move('arm', traj)
